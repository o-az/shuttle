name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

defaults:
  run:
    shell: bash

env:
  CI: true
  ACTIONS_RUNNER_DEBUG: true
  ENVIRONMENT: "production"
  BASE_URL: "https://shuttle.deno.dev"

jobs:
  deploy:
    permissions:
      contents: write
      id-token: write
      deployments: write
    timeout-minutes: 3.5
    runs-on: ["ubuntu-latest"]
    steps:
      - name: "🏨 Checkout"
        uses: actions/checkout@v3

      - name: "🦕 Setup Deno"
        uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x

      - name: "🧹 lint & fmt & typecheck"
        run: |
          deno task lint
          deno task fmt
          deno task typecheck

      - name: "Install deployctl"
        run: deno install --allow-all --no-check --reload --force https://deno.land/x/deploy/deployctl.ts

      - name: "🔑 Populate Environment Variables"
        run: |
          echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DATABASE_TOKEN=${{ secrets.DATABASE_TOKEN }}" >> .env
          echo "BASE_URL=${{ env.BASE_URL }}" >> .env
          echo "UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }}" >> .env
          echo "UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }}" >> .env

      - name: "🥬 Deploy App"
        run: |
          deno run --allow-all esbuild.config.ts

          deployctl deploy --token="${{ secrets.DENO_DEPLOY_TOKEN }}" --project="shuttle" --prod ./dist/index.js
